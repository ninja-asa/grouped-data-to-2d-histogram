[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "histogram2d"
version = "0.1.0"
description = ""
authors = ["Sofia Assis"]

[tool.poetry.dependencies]
python = "^3.10"
openpyxl = "^3.1.2"
pandas = "^2.2.2"
plotly = "^5.21.0"
nbformat = "^5.10.4"
kaleido = "0.2.1"

[tool.poetry.dev-dependencies]
pytest = "^8.2.0"
black = "^24.4.2" 
coverage = "^7.5.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["histogram2d"]
branch = true
omit = [
    "*/__init__.py",
    "*/__main__.py",
    "*/tests/*",
    "*/test_*",
    "*/setup.py",
    "*/conftest.py",
    "*/_version.py",
    "*main.py"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"
